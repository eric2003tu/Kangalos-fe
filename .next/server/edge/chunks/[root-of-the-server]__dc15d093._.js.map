{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { withAuth } from 'next-auth/middleware';\n\nconst protectedPaths = ['/dashboard', '/portal'];\nconst authRestrictedPaths = ['/login', '/register', '/forgot-password'];\n\nfunction pathMatches(pathname: string, paths: string[]): boolean {\n  return paths.some(path => pathname.startsWith(path));\n}\n\nconst authMiddleware = withAuth(\n  function onSuccess() {\n    return NextResponse.next();\n  },\n  {\n    callbacks: {\n      authorized: ({ token }) => !!token,\n    },\n    pages: {\n      signIn: \"/login\",\n    },\n  }\n);\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n\n  const isAuthenticated = !!request.cookies.get('next-auth.session-token');\n\n  if (pathMatches(pathname, authRestrictedPaths) && isAuthenticated) {\n    return NextResponse.redirect(new URL('/dashboard', request.url));\n  }\n\n  if (pathMatches(pathname, protectedPaths)) {\n    return (authMiddleware as (req: NextRequest) => NextResponse)(request);\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: '/((?!api|trpc|_next|_vercel|.*\\\\..*).*)',\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAEA,MAAM,iBAAiB;IAAC;IAAc;CAAU;AAChD,MAAM,sBAAsB;IAAC;IAAU;IAAa;CAAmB;AAEvE,SAAS,YAAY,QAAgB,EAAE,KAAe;IACpD,OAAO,MAAM,IAAI,CAAC,CAAA,OAAQ,SAAS,UAAU,CAAC;AAChD;AAEA,MAAM,iBAAiB,CAAA,GAAA,kJAAA,CAAA,WAAQ,AAAD,EAC5B,SAAS;IACP,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B,GACA;IACE,WAAW;QACT,YAAY,CAAC,EAAE,KAAK,EAAE,GAAK,CAAC,CAAC;IAC/B;IACA,OAAO;QACL,QAAQ;IACV;AACF;AAGK,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,MAAM,kBAAkB,CAAC,CAAC,QAAQ,OAAO,CAAC,GAAG,CAAC;IAE9C,IAAI,YAAY,UAAU,wBAAwB,iBAAiB;QACjE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,IAAI,YAAY,UAAU,iBAAiB;QACzC,OAAO,AAAC,eAAsD;IAChE;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;AACX"}}]
}